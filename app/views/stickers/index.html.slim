.no-print
  h1 = t('action.index', models: 'Stickers')
  = paginate @books

  = search_form_for @q, url: stickers_path do |f|
    = f.label :id_eq_any_split_whitespace, Book.human_attribute_name(:id).pluralize
    = f.text_field :id_eq_any_split_whitespace, placeholder: t('placeholder.eq_any_split_whitespace')
    table
      thead
        tr
          th = sort_link(@q, :id,     Book.human_attribute_name(:id))
          th = sort_link(@q, :title,  Book.human_attribute_name(:title))
          th = sort_link(@q, :series, Book.human_attribute_name(:series))
          th = sort_link(@q, :part,   Book.human_attribute_name(:part))
          th = link_to Author.model_name.human, '#'
          th = sort_link(@q, :category,        Book.human_attribute_name(:category))
          th = sort_link(@q, :reading_level,   Book.human_attribute_name(:reading_level))
          th = sort_link(@q, :avi_level,       Book.human_attribute_name(:avi_level))
          th = sort_link(@q, :sticker_pending, Book.human_attribute_name(:sticker_pending))
          th.actions
            = search_result_info(@books)
        tr
          th = f.text_field :id_eq,                 placeholder: t('placeholder.eq')
          th = f.text_field :title_cont,            placeholder: t('placeholder.cont')
          th = f.text_field :series_cont,           placeholder: t('placeholder.cont')
          th = f.text_field :part_eq,               placeholder: t('placeholder.eq')
          th = f.text_field :author_last_name_cont, placeholder: "#{Author.human_attribute_name(:last_name)} #{t('placeholder.cont')}"
          th = f.select :category_eq,      Book::NonFiction::Categories::ALL, { include_blank: ' - '}
          th = f.select :reading_level_eq, Book::ReadingLevels::ALL,          { include_blank: ' - '}
          th = f.select :avi_level_eq,     Book::AviLevels::ALL,              { include_blank: ' - '}
          th = f.select :sticker_pending_eq, [true,false].map { |v| [t(v), v] }, { include_blank: ' - '}

          th.actions
            = f.submit class: 'button'
            = link_to t('buttons.print'), '#', onclick: 'print(); return false', class: 'button warning'
            = link_to 'Reset', stickers_path, class: 'button secondary'

- @books.each_slice(6) do |books_for_page|
  - books_for_page.each do |book|
    .grid-x
      .cell.medium-2= render 'cover_sticker', book: book
      .cell.medium-1
      .cell.medium-9= render 'card_sticker', book: book
    br
    br
  .page-break
