= simple_form_for @book, as: :book do |f|
  = f.error_notification
  = f.error_notification message: f.object.errors[:base].to_sentence if f.object.errors[:base].present?

  .form-inputs data-controller="book-form"
    datalist#titles data-target="book-form.titleList"

    = f.input :category, wrapper: :zurb_input, collection: Book::NonFiction::Categories::ALL, input_html: { class: 'js-select2' }
    = f.input :title, wrapper: :zurb_input, input_html: { list: :titles, data: { target: 'book-form.title', action: 'input->book-form#inputTitle' } }
    = f.input :series, wrapper: :zurb_input, collection: [@book.series], include_blank: true, input_html: { class: 'js-select2-ajax', data: { ajax__url: series_index_path(format: :json), tags: true, 'minimum-input-length': 3 } }
    = f.input :part, wrapper: :zurb_input
    = f.input :tags, wrapper: :zurb_input, collection: Book::NonFiction.sorted_existing_tags, input_html: { multiple: true, class: 'js-select2-free-tags' }
    = f.input :reading_level, wrapper: :zurb_input, collection: Book::ReadingLevels::ALL, input_html: { class: 'js-select2' }
    = f.input :avi_level, wrapper: :zurb_input, collection: Book::AviLevels::ALL, input_html: { class: 'js-select2' }

  .form-actions
    = f.button :submit, class: 'button'
    = link_to t('button.cancel'), :back, class: 'button secondary'
