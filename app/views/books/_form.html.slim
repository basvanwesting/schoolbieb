= simple_form_for @book do |f|
  = f.error_notification
  = f.error_notification message: f.object.errors[:base].to_sentence if f.object.errors[:base].present?

  .form-inputs
    = f.association :author, wrapper: :zurb_input, label_method: :full_name, value_method: :id, include_blank: true, input_html: { class: 'js-select2' }
    = f.input :title, wrapper: :zurb_input, collection: Book.distinct.pluck(:title).sort + ReferenceData.enriched_titles,  include_blank: true, input_html: { class: 'js-select2', data: { tags: true } }
    = f.input :series, wrapper: :zurb_input, collection: Book.distinct.pluck(:series).sort + ReferenceData.series,  include_blank: true, input_html: { class: 'js-select2', data: { tags: true } }
    = f.input :part, wrapper: :zurb_input
    = f.input :reading_level, wrapper: :zurb_input, collection: Book::ReadingLevels::All, input_html: { class: 'js-select2' }
    = f.input :avi_level, wrapper: :zurb_input, collection: Book::AviLevels::All, input_html: { class: 'js-select2' }

  .form-actions
    = f.button :submit, class: 'button'
    = link_to t('action.new', model: Author.model_name.human), new_author_path, class: 'button'
    = link_to t('button.cancel'), :back, class: 'button secondary'
