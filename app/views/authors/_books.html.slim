h3 = Book.model_name.human(count: 2)

table
  thead
    tr
      th = Book.human_attribute_name(:id)
      th = Book.human_attribute_name(:title)
      th = Book.human_attribute_name(:series)
      th = Book.human_attribute_name(:part)
      th = Book.human_attribute_name(:reading_level)
      th = Book.human_attribute_name(:avi_level)
      th.actions

  tbody
    - books.each do |book|
      tr
        td = book.id.to_s.rjust(4,'0')
        td = book.title
        td = book.series
        td = book.part
        td = book.reading_level
        td = book.avi_level
        td.actions
          = link_to t('button.show'), book, class: 'button tiny'
          - if can? :update, book
            = link_to t('button.edit'), edit_polymorphic_path(book), class: 'button warning warning tiny'
          - if can? :destroy, book
            = link_to t('button.destroy'), book, data: { confirm: 'Are you sure?' }, method: :delete, class: 'button alert tiny'
          - if book.may_borrow? && can?(:create, BookUseCase::Borrow)
            = link_to BookUseCase::Borrow.model_name.human, new_book_use_case_borrow_path(book_use_case_borrow: { book_id: book.id }), class: 'button warning tiny'
          - if book.may_return? && can?(:create, BookUseCase::Return)
            = link_to BookUseCase::Return.model_name.human, new_book_use_case_return_path(book_use_case_return: { book_id: book.id }), class: 'button success tiny'
          - if book.may_enable? && can?(:create, BookUseCase::Enable)
            = link_to BookUseCase::Enable.model_name.human, book_use_case_enables_path(book_use_case_enable: { book_id: book.id }), method: :post, class: 'button success tiny'
          - if book.may_disable? && can?(:create, BookUseCase::Disable)
            = link_to BookUseCase::Disable.model_name.human, book_use_case_disables_path(book_use_case_disable: { book_id: book.id }), method: :post, class: 'button alert tiny'

